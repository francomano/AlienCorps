beliefupdates: 
    {availMiner} DeployMiners(Region) {miner(Region), not availMiner}
    {miner(Region)} StopMiners(Region) {not miner(Region), availMiner}

    {} FoundResource(ResourceID, Region) {resource(ResourceID, Region)}
    {} ExhaustedResource(ResourceID, Region) {not resource(ResourceID, Region)}

    {not ispriority} AddPriorityResource(ResourceID) {priority(ResourceID), ispriority}
    {priority(ResourceID)} RemovePriorityResource(ResourceID) {not priority(ResourceID), not ispriority}

beliefs:
    availMiner.

goals:
    explorePlanet.
    extractResources.



plans:


pgrules:



    explorePlanet <- not ispriority |
        {
            @env( explorePlanet(), L);
        }

    explorePlanet <- priority(ResourceID) |
        {
            @env( lookForResource(ResourceID), L);
        }

    mineResource(ResourceID) <- miner(Region) and resource(ResourceID, Region) |
        {
            @env( mineResource(ResourceID, Region), L);
        }

    mineResource(ResourceID) <- resource(ResourceID, Region) and availMiner |
        {
            DeployMiners(Region);
        }

    <- miner(Region) and not resource(_, Region) |
        {
            StopMiners(Region);
        }




pcrules:

    event(foundResource(ResourceID, Region), env) <- true  |
        {
            FoundResource(ResourceID, Region);
            adopta(mineResource(ResourceID));
        }

    event(exhaustedResource(ResourceID, Region), env) <- true  |
        {
            ExhaustedResource(ResourceID, Region);
            dropgoal(mineResource(ResourceID));
        }

    message( manufacturingManager, request, La, On, addPriority(ResourceID)) <- true |
        {
            AddPriorityResource(ResourceID);
        }
    
    message( manufacturingManager, inform, La, On, removePriority(ResourceID)) <- true |
        {
            RemovePriorityResource(ResourceID);
        }

    event( addPriority(ResourceID), env) <- true |
        {
            AddPriorityResource(ResourceID);
        }

    event( extractedQuantity(ResourceID, Quantity), env) <- priority(ResourceID) |
        {
            send(manufacturingManager, inform, extracted(ResourceID, Quantity));
        }


prrules:
